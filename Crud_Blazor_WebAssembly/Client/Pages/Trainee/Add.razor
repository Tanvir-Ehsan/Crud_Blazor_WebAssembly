@page "/trainees/add"
@page "/trainee/edit/{Id:int}"

@using Crud_Blazor_WebAssembly.Shared.Models
@inject  HttpClient Http
@inject NavigationManager NavigationManager

<h2>@Title Trainee</h2>



<EditForm Model="@trainee" OnValidSubmit="SaveTrainee">
    <DataAnnotationsValidator></DataAnnotationsValidator>

    <div class="mb-3">
        <label for="Name" class="form-label">Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="@trainee.Name" />
        </div>
        <ValidationMessage For="@(()=> trainee.Name)"></ValidationMessage>
    </div>
    
    <div class="mb-3">
        <label for="Name" class="form-label">Contact Address</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="@trainee.ContactAddress" />
        </div>
        <ValidationMessage For="@(()=> trainee.ContactAddress)"></ValidationMessage>
    </div>
    
    <div class="mb-3">
        <label for="Name" class="form-label">Cell Phone</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="@trainee.CellPhoneNo" />
        </div>
        <ValidationMessage For="@(()=> trainee.CellPhoneNo)"></ValidationMessage>
    </div>
    
    <div class="mb-3">
        <label for="Name" class="form-label">Email</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="@trainee.EmailAddress" />
        </div>
        <ValidationMessage For="@(()=> trainee.EmailAddress)"></ValidationMessage>
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button @onclick="Cancel" class="btn btn-danger">Cancel</button>
    </div>

</EditForm>


@code {
    [Parameter]
    public int Id{ get; set; }
    protected Trainee trainee = new();
    protected string Title = "Add";


    protected override async Task OnParametersSetAsync()
    {
        if(Id != 0)
        {
            Title = "Edit";
            trainee = await Http.GetFromJsonAsync<Trainee>("api/Trainee/" + Id);
        }
    }

    protected async Task SaveTrainee()
    {
        if (trainee.Id != 0)
        {
            await Http.PutAsJsonAsync("api/Trainee", trainee);
        }
        else
        {
            await Http.PostAsJsonAsync("api/Trainee", trainee);
        }
        Cancel();
    }

    public void Cancel()
    {
        NavigationManager.NavigateTo("/trainees");
    }
}
